# Define the main user and number of worker processes
user nginx;
worker_processes auto;

# Define the error log and PID file
error_log /var/log/nginx/error.log warn;
pid /run/nginx.pid;

# Set up the worker connections and events
events {
    worker_connections 1024;
}

# HTTP server configuration
http {
    # Include MIME types and default charset
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Enable Gzip compression
    gzip on;
    gzip_disable "msie6";
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_buffers 16 8k;
    gzip_http_version 1.1;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    # Set up access logs
    access_log /var/log/nginx/access.log;

        server {
            listen 80;
            server_name localhost;

            # Set the root directory to the build output
            root /usr/share/nginx/html;
            index index.html;

            # index.html static file caching rules
            location / {
                try_files $uri $uri/ /index.html;
                # do not use the cached version unless the server responds with a 304 NOT MODIFIED after re-evaluation.
                # index.html is only redownloaded if it has changed, which is checked on each request.
                add_header Cache-Control "no-cache, must-revalidate";
            }

            # Specific caching for assets (e.g., JS, CSS)
            # Vite produces assets with hashes in the filename, so they can be cached forever.
            location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|otf|eot)$ {
                # Turn off logging for static assets to reduce noise
                access_log off;
                # Set a very long cache time (1 year) since files are immutable
                add_header Cache-Control "public, max-age=31536000, immutable";
            }

            # Additional security headers
            add_header X-Content-Type-Options nosniff;
            add_header X-Frame-Options DENY;
            add_header X-XSS-Protection "1; mode=block";
        }
}

