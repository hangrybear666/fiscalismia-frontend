import { resourceProperties } from './resource_properties';

export const locales_en = {
  MENU_OVERVIEW: 'Overview',
  MENU_DEALS: 'Deals',
  MENU_ADMIN_PANEL: 'Admin Panel',
  MENU_UPLOAD_AREA: 'Database Upload',
  MENU_FOOD_PRICES: 'Food Prices',
  MENU_GROCERY_DEALS: 'Grocery Deals',
  MENU_STORES: 'Stores',
  MENU_INDULGENCES: 'Indulgences',
  MENU_MONTHLY_BUDGET: 'Monthly Budget',
  MENU_INVESTMENTS: 'Investments',
  MENU_PORTFOLIO: 'Portfolio',
  MENU_SALES: 'Sales',
  MENU_LIVING_ESSENTIALS: 'Living & Essentials',
  MENU_RECREATION_RELAXATION: 'Recreation & Relaxation',
  MENU_VARIABLE_EXPENSES: 'Variable Expenses',
  MENU_FIXED_COSTS: 'Fixed Costs',
  MENU_INCOME: 'Income',

  GENERAL_EVERY: 'Every',
  GENERAL_MONTHS: 'Months',
  GENERAL_UPLOAD_IMG: 'Upload Image',
  GENERAL_CONFIRM: 'Confirm',
  GENERAL_DELETE: 'Delete',
  GENERAL_CANCEL: 'Cancel',
  GENERAL_SIGN_IN: 'Login',
  GENERAL_CREATE_ACCOUNT: 'Create Account',
  GENERAL_USERNAME: 'Username',
  GENERAL_PASSWORD: 'Password',
  GENERAL_SETTINGS: 'Settings',
  GENERAL_DATE: 'Datum',
  GENERAL_SAVE: 'Save',
  GENERAL_DAYS: 'Days',
  GENERAL_SORT_BY: 'Sort by',
  GENERAL_EMAIL: 'Email Address',
  GENERAL_DELETE_ROW_TOOLTIP: 'Delete row',
  GENERAL_PRIOR_SELECTION_BTN_TOOLTIP: 'Previous entry',
  GENERAL_NEXT_SELECTION_BTN_TOOLTIP: 'Next entry',

  INCOME_MONTHLY_NET_INCOME: 'Total monthly wage [net]',
  INCOME_FIXED_COST_CARD_HEADER: 'Total fixed costs',
  INCOME_MONTHLY_BUDGET_CHART_HEADER: 'Monthly budget',
  INCOME_YEARLY_GROSS_INCOME: 'Annual salary [gross]',
  INCOME_MONTHLY_FIXED_COSTS: 'Monthly fixed costs',
  INCOME_NET_INCOME: 'Wage [net]',
  INCOME_GROSS_INCOME: 'Wage [gross]',
  INCOME_ONE_TIME_BONUS: 'One-time bonus [net]',

  INCOME_SALES_THEADER_DESCRIPTION: 'Article',
  INCOME_SALES_THEADER_COST: 'Sales price',
  INCOME_SALES_THEADER_STORE: 'Sales platform',
  INCOME_SALES_THEADER_DATE: 'Sale date',
  INCOME_SALES_CARD_TOTAL_SALES_HEADER: 'Total sales',
  INCOME_SALES_CARD_TOTAL_SALES_SUBTITLE: 'In the year',
  INCOME_SALES_CARD_DISTINCT_STORE_SALES_DETAILS_HEADER: 'Sales over 100\u20AC',

  INCOME_INVESTMENTS_COL_HEADER_DESCRIPTION: 'Description',
  INCOME_INVESTMENTS_COL_HEADER_MARKETPLACE: 'Marketplace',
  INCOME_INVESTMENTS_COL_HEADER_UNITS: 'Unit',
  INCOME_INVESTMENTS_COL_HEADER_FEES: 'Fees',
  INCOME_INVESTMENTS_COL_HEADER_ISIN: 'ISIN',
  INCOME_INVESTMENTS_COL_HEADER_AGGREGATE: 'Aggregate',
  INCOME_INVESTMENTS_COL_HEADER_TYPE: 'Type',
  INCOME_INVESTMENTS_COL_HEADER_DIVIDEND: 'Dividend',
  INCOME_INVESTMENTS_COL_HEADER_PCT_OF_TOTAL: 'Pct of total',
  INCOME_INVESTMENTS_COL_HEADER_EXECUTION_TYPE: 'Order type',
  INCOME_INVESTMENTS_COL_HEADER_AVG_PRICE: 'Average price',
  INCOME_INVESTMENTS_COL_HEADER_UNIT_PRICE: 'Unit price',
  INCOME_INVESTMENTS_COL_HEADER_TOTAL: 'Total',
  INCOME_INVESTMENTS_COL_HEADER_DATE: 'Date',
  INCOME_INVESTMENTS_TOOLTIP_PROFIT_AMT_GROSS: 'Profit (gross): ',
  INCOME_INVESTMENTS_TOOLTIP_TAXED_AMT: 'Tax deduction: ',
  INCOME_INVESTMENTS_TOOLTIP_PROFIT_AMT_NET: 'Profit (net): ',
  INCOME_INVESTMENTS_TOOLTIP_SELL_ROW_BTN: 'Sell investment',

  FIXED_COSTS_MONHTLY_COST: 'Total costs',
  FIXED_COSTS_RENT_UTILITIES: 'Rent & Utilities',
  FIXED_COSTS_DSL_PHONE: 'DSL & Mobile phone',
  FIXED_COSTS_SPORTS_HEALTH: 'Sports & Health',
  FIXED_COSTS_MEDIA_ENTERTAINMENT: 'Media & Entertainment',
  FIXED_COSTS_INSURANCE: 'Insurance',
  FIXED_COSTS_STUDENT_LOANS: 'Student Loans',

  DEALS_OVERVIEW_THEADER_FOODITEM: 'Item',
  DEALS_OVERVIEW_THEADER_BRAND: 'Brand',
  DEALS_OVERVIEW_THEADER_STORE: 'Supermarket',
  DEALS_OVERVIEW_THEADER_MAIN_MACRO: 'Main macro',
  DEALS_OVERVIEW_THEADER_KCAL_AMT_TOP: 'Calories',
  DEALS_OVERVIEW_THEADER_WEIGHT_TOP: 'Weight',
  DEALS_OVERVIEW_THEADER_PRICE_TOP: 'Price',
  DEALS_OVERVIEW_THEADER_LAST_UPDATE_TOP: 'last checked',
  DEALS_OVERVIEW_THEADER_NORMALIZED_PRICE_TOP: 'Normalized price',
  DEALS_OVERVIEW_UPDATE_FOOD_PRICE: 'Update current price',

  DEALS_FOOD_PRICES_CARD_SUBTITLE: (pos1: string) => `weight ${pos1}g`,
  DEALS_FOOD_PRICES_CARD_LAST_UPDATED: (pos1: string) => `last checked ${pos1}`,
  DEALS_FOOD_PRICES_CARD_PRICE_PER_KG: (pos1: string) => `${pos1}\nper kg`,

  DEALS_GROCERY_DEALS_THEADER_FOODITEM: 'Food Item',
  DEALS_GROCERY_DEALS_THEADER_BRAND: 'Brand',
  DEALS_GROCERY_DEALS_THEADER_STORE: 'Supermarket',
  DEALS_GROCERY_DEALS_THEADER_ORIGINAL_PRICE: 'Original price',
  DEALS_GROCERY_DEALS_THEADER_DISCOUNT_AMOUNT: 'Price reduction',
  DEALS_GROCERY_DEALS_THEADER_DISCOUNT_PRICE: 'Discount price',
  DEALS_GROCERY_DEALS_THEADER_DISCOUNT_PCT: 'Discount Pct',
  DEALS_GROCERY_DEALS_THEADER_DISCOUNT_START_DATE: 'valid from',
  DEALS_GROCERY_DEALS_THEADER_DISCOUNT_END_DATE: 'valid until',
  DEALS_GROCERY_DEALS_CONTENT_CARD_WEIGHT: 'weight',
  DEALS_GROCERY_DEALS_CONTENT_CARD_START_DATE_STR: 'valid from',
  DEALS_GROCERY_DEALS_CONTENT_CARD_END_DATE_STR: 'valid until',
  DEALS_GROCERY_DEALS_CONTENT_CARD_DEAL_DURATION_STR: 'Offer duration',
  DEALS_GROCERY_DEALS_CONTENT_CARD_DEAL_VALID_TODAY_TOMORROW: 'valid today and tomorrow',
  DEALS_GROCERY_DEALS_CONTENT_CARD_DEAL_LAST_DAY: 'last day of validity',
  DEALS_GROCERY_DEALS_CONTENT_CARD_DEAL_VALID_FROM_TOMORROW: 'valid starting tomorrow',
  DEALS_GROCERY_DEALS_CONTENT_CARD_ENDS_IN_DAYS_STR_1: 'valid for',
  DEALS_GROCERY_DEALS_CONTENT_CARD_ENDS_IN_DAYS_STR_2: 'more day(s)',
  DEALS_GROCERY_DEALS_CONTENT_CARD_STARTS_IN_DAYS_STR_1: 'starts in',
  DEALS_GROCERY_DEALS_CONTENT_CARD_STARTS_IN_DAYS_STR_2: 'day(s)',

  CONTENT_CARD_DISCOOUNT_NOTIFICATION_MESSAGE_FILE_MISSING: 'No file provided in image upload',
  CONTENT_CARD_DISCOOUNT_NOTIFICATION_MESSAGE_FILE_SIZE_EXCEEDED: 'File size is limited to 1MB.',
  CONTENT_CARD_DISCOOUNT_NOTIFICATION_MESSAGE_INVALID_FILE_TYPE: 'Images must be uploaded as either png, jpeg or webp!',
  CONTENT_CARD_DISCOOUNT_NOTIFICATION_MESSAGE_IMG_PERSIST_SUCCESS: (pos1: string) =>
    `File persisted in path: ${pos1} and referenced in database.`,
  CONTENT_CARD_DISCOOUNT_NOTIFICATION_MESSAGE_IMG_UPLOAD_CONFLICT: 'STATUS 409: choose a different image.',
  CONTENT_CARD_DISCOOUNT_NOTIFICATION_MESSAGE_IMG_UPLOAD_BAD_REQUEST: 'STATUS 400: image could not be processed.',
  CONTENT_CARD_DISCOOUNT_NOTIFICATION_MESSAGE_IMG_DELETE_SUCCESS: (pos1: string) =>
    `Image successfully deleted from path: ${pos1} and its reference from database.`,
  CONTENT_CARD_DISCOOUNT_NOTIFICATION_MESSAGE_IMG_DELETE_FAILURE: 'Image could not be deleted',
  CONTENT_CARD_DISCOOUNT_NOTIFICATION_MESSAGE_DISCOUNT_DELETE_SUCCESS: (pos1: string) =>
    `Food Item discount with id [${pos1}] successfully deleted`,
  CONTENT_CARD_DISCOOUNT_NOTIFICATION_MESSAGE_DISCOUNT_DELETE_FAILURE: 'Food Item Discount could not be deleted.',
  CONTENT_CARD_DISCOOUNT_DELETE_FOOD_DISCOUNT_TOOLTIP: 'Delete discount',
  CONTENT_CARD_DISCOOUNT_DELETE_FOOD_DISCOUNT_IMAGE_TOOLTIP: 'Delete Image',

  MINOR_INPUT_CREATE_ACCOUNT_MODAL_USERNAME_VALIDATION_ERROR_MSG_1: 'No user name specified',
  MINOR_INPUT_CREATE_ACCOUNT_MODAL_USERNAME_VALIDATION_ERROR_MSG_2: 'User name must contain at least 3 characters',
  MINOR_INPUT_CREATE_ACCOUNT_MODAL_USERNAME_VALIDATION_ERROR_MSG_3:
    'Allowed are 3-32 alphanumerical Chracters and underscores.',
  MINOR_INPUT_CREATE_ACCOUNT_MODAL_PASSWORD_VALIDATION_ERROR_MSG_1: 'No password specified',
  MINOR_INPUT_CREATE_ACCOUNT_MODAL_PASSWORD_VALIDATION_ERROR_MSG_2: 'Password must contain at least 8 characters',
  MINOR_INPUT_CREATE_ACCOUNT_MODAL_EMAIL_VALIDATION_ERROR_MSG_1: 'Email is not a valid address',

  MINOR_INPUT_FOOD_DISCOUNT_MODAL_OPEN: 'Add Dscount',
  MINOR_INPUT_FOOD_DISCOUNT_MODAL_DISCOUNT_AMOUNT: 'Discount price',
  MINOR_INPUT_FOOD_DISCOUNT_MODAL_START_DATE: 'valid from',
  MINOR_INPUT_FOOD_DISCOUNT_MODAL_END_DATE: 'valid until',
  MINOR_INPUT_FOOD_DISCOUNT_MODAL_SELECTDROPDOWN_LABEL: 'Select Food Item',
  MINOR_INPUT_FOOD_DISCOUNT_MODAL_FOOD_ITEM_SELECTION_ERROR_MSG: 'No item selected',
  MINOR_INPUT_FOOD_DISCOUNT_MODAL_PRICE_VALIDATION_ERROR_MSG: 'Price expected in the following format: 12.05',
  MINOR_INPUT_FOOD_DISCOUNT_MODAL_GENERIC_DATE_VALIDATION_ERROR_MSG:
    'Expected date (between 2022 and next year) in the format: DD.MM.YYYY',
  MINOR_INPUT_FOOD_DISCOUNT_MODAL_END_DATE_BEFORE_START_DATE_VALIDATION_ERROR_MSG:
    'The start date must be before the end date',

  MINOR_INPUT_FOOD_ITEM_MODAL_OPEN: 'Add item',
  MINOR_INPUT_FOOD_ITEM_MODAL_INPUT_FOOD_ITEM: 'Food Item',
  MINOR_INPUT_FOOD_ITEM_MODAL_INPUT_PRICE: 'Price in â‚¬',
  MINOR_INPUT_FOOD_ITEM_MODAL_INPUT_WEIGHT: 'Weight in grams',
  MINOR_INPUT_FOOD_ITEM_MODAL_INPUT_KCAL_AMOUNT: 'kcal/100g',
  MINOR_INPUT_FOOD_ITEM_MODAL_INPUT_LAST_UPDATE: 'last price check',
  MINOR_INPUT_FOOD_ITEM_MODAL_INPUT_MAIN_MACRO: 'Main macro',
  MINOR_INPUT_FOOD_ITEM_MODAL_INPUT_STORE: 'Store',
  MINOR_INPUT_FOOD_ITEM_MODAL_INPUT_BRAND: 'Brand',
  MINOR_INPUT_FOOD_ITEM_MODAL_PRICE_VALIDATION_ERROR_MSG: 'Price expected in the following format: 12.05',
  MINOR_INPUT_FOOD_ITEM_MODAL_KCAL_AMOUNT_VALIDATION_ERROR_MSG: 'Calories expected as a number, e.g.: 350',
  MINOR_INPUT_FOOD_ITEM_MODAL_FOOD_ITEM_VALIDATION_ERROR_MSG: 'Item must contain at least 5 characters',
  MINOR_INPUT_FOOD_ITEM_MODAL_BRAND_VALIDATION_ERROR_MSG: 'Brand must contain at least 4 characters',
  MINOR_INPUT_FOOD_ITEM_MODAL_WEIGHT_VALIDATION_ERROR_MSG: 'Weight expected as a number in grams, e.g.: 500',
  MINOR_INPUT_FOOD_ITEM_MODAL_GENERIC_DATE_VALIDATION_ERROR_MSG:
    'Expected date (between 2022 and next year) in the format: DD.MM.YYYY',

  MINOR_INPUT_INVESTMENT_DIVIDEND_TAXES_MODAL_OPEN_BUTTON: 'Add investment',
  MINOR_INPUT_INVESTMENT_DIVIDEND_TAXES_MODAL_GENERIC_DATE_VALIDATION_ERROR_MSG:
    'Expected date (between 2022 and next year) in the format: DD.MM.YYYY',
  MINOR_INPUT_INVESTMENT_DIVIDEND_TAXES_MODAL_PRICE_VALIDATION_ERROR_MSG:
    'Price expected in the following format: 14.00',
  MINOR_INPUT_INVESTMENT_DIVIDEND_TAXES_MODAL_PCT_TAXED_VALIDATION_ERROR_MSG:
    'Proportion of profit that is taxed between 0 - 100.00%',
  MINOR_INPUT_INVESTMENT_DIVIDEND_TAXES_MODAL_PROFIT_AMT_VALIDATION_ERROR_MSG:
    'Profit expected in the following format: 330.00',
  MINOR_INPUT_INVESTMENT_DIVIDEND_TAXES_MODAL_UNITS_VALIDATION_ERROR_MSG:
    'Unit expected as a number greater than zero, e.g.: 42',
  MINOR_INPUT_INVESTMENT_DIVIDEND_TAXES_MODAL_ISIN_VALIDATION_ERROR_MSG:
    'ISIN format expected. 12-digit with country code',
  MINOR_INPUT_INVESTMENT_DIVIDEND_TAXES_MODAL_DESCRIPTION_VALIDATION_ERROR_MSG:
    'Description may contain between 5 - 50 characters',
  MINOR_INPUT_INVESTMENT_DIVIDEND_TAXES_MODAL_OWNED_UNITS_VALIDATION_ERROR_MSG: (pos1: string) =>
    `Owned Units [${pos1}] must be greater than or equal to sold units.`,
  MINOR_INPUT_INVESTMENT_DIVIDEND_TAXES_MODAL_INPUT_UNIT_PRICE: 'Unit price in â‚¬',
  MINOR_INPUT_INVESTMENT_DIVIDEND_TAXES_MODAL_INPUT_MARKETPLACE_SELECT: 'Marketplace',
  MINOR_INPUT_INVESTMENT_DIVIDEND_TAXES_MODAL_INPUT_INVESTMENT_TYPE_SELECT: 'Type of investment',
  MINOR_INPUT_INVESTMENT_DIVIDEND_TAXES_MODAL_INPUT_FEES: 'Fees in â‚¬',
  MINOR_INPUT_INVESTMENT_DIVIDEND_TAXES_MODAL_INPUT_PROFIT_AMT: 'Profit in â‚¬',
  MINOR_INPUT_INVESTMENT_DIVIDEND_TAXES_MODAL_INPUT_PCT_TAXED: '% of the profit that is taxed',
  MINOR_INPUT_INVESTMENT_DIVIDEND_TAXES_MODAL_INPUT_ISIN: 'ISIN',
  MINOR_INPUT_INVESTMENT_DIVIDEND_TAXES_MODAL_INPUT_DESCRIPTION: 'Investment Description',
  MINOR_INPUT_INVESTMENT_DIVIDEND_TAXES_MODAL_INPUT_UNITS: 'Unit',
  MINOR_INPUT_INVESTMENT_DIVIDEND_TAXES_MODAL_INPUT_EXECUTION_DATE: 'Execution date',

  MINOR_INPUT_DIVIDEND_MODAL_OPEN_BUTTON: 'Add dividend payout',
  MINOR_INPUT_DIVIDEND_MODAL_INPUT_ISIN_SELECT: 'Select ISIN of related investment',
  MINOR_INPUT_DIVIDEND_MODAL_INPUT_DIVIDEND_DATE: 'Dividend date',
  MINOR_INPUT_DIVIDEND_MODAL_INPUT_DIVIDEND_AMT: 'Dividend amount',
  MINOR_INPUT_DIVIDEND_MODAL_DIVIDEND_AMOUNT_VALIDATION_ERROR_MSG: 'Dividend expected in the following format: 43.40',

  MINOR_FILTER_FOOD_PRICES_NAME_HEADER: 'Search',
  MINOR_FILTER_FOOD_PRICES_FOOD_ITEM_INPUT_LABEL: 'Food Item',
  MINOR_FILTER_FOOD_PRICES_MACRO_HEADER: 'Macronutrient selection',
  MINOR_FILTER_FOOD_PRICES_STORE_HEADER: 'Supermarket selection',
  MINOR_FILTER_FOOD_PRICES_CLEAR_FILTER: 'Clear selection',
  MINOR_FILTER_FOOD_PRICES_RENDER_IMAGES_SWITCH_LABEL: 'Show images',
  MINOR_FILTER_FOOD_PRICES_SORT_CRITERIA_TOOLTIP_PRICE_PER_KG_ASC: 'Ascending by â‚¬/kg',
  MINOR_FILTER_FOOD_PRICES_SORT_CRITERIA_BTN_VALUE_PRICE_PER_KG: 'Price per kilogram',
  MINOR_FILTER_FOOD_PRICES_SORT_CRITERIA_TOOLTIP_PRICE_PER_KG_DESC: 'Descending by â‚¬/kg ',
  MINOR_FILTER_FOOD_PRICES_SORT_CRITERIA_TOOLTIP_PRICE_ASC: 'Ascending by â‚¬',
  MINOR_FILTER_FOOD_PRICES_SORT_CRITERIA_BTN_VALUE_PRICE: 'Price',
  MINOR_FILTER_FOOD_PRICES_SORT_CRITERIA_TOOLTIP_PRICE_DESC: 'Descending by â‚¬',
  MINOR_FILTER_FOOD_PRICES_SORT_CRITERIA_TOOLTIP_NORMALIZED_PRICE_ASC: 'Ascending by â‚¬',
  MINOR_FILTER_FOOD_PRICES_SORT_CRITERIA_BTN_VALUE_NORMALIZED_PRICE: 'Normalized price',
  MINOR_FILTER_FOOD_PRICES_SORT_CRITERIA_BTN_VALUE_TOOLTIP_NORMALIZED_PRICE:
    'If this food alone would have to cover 3500kcal, how much would it cost?',
  MINOR_FILTER_FOOD_PRICES_SORT_CRITERIA_TOOLTIP_NORMALIZED_PRICE_DESC: 'Descending by â‚¬',
  MINOR_FILTER_FOOD_PRICES_SORT_CRITERIA_TOOLTIP_KCAL_AMOUNT_KG_ASC: 'Ascending by kcal/100g.',
  MINOR_FILTER_FOOD_PRICES_SORT_CRITERIA_BTN_VALUE_KCAL_AMOUNT: 'KCAL',
  MINOR_FILTER_FOOD_PRICES_SORT_CRITERIA_TOOLTIP_KCAL_AMOUNT_DESC: 'Descending by kcal/100g.',

  VARIABLE_EXPENSES_OVERVIEW_TOTAL_EXPENSES: 'Total expenditure',
  VARIABLE_EXPENSES_OVERVIEW_TOTAL_PURCHASE_AMOUNT: 'Total',
  VARIABLE_EXPENSES_OVERVIEW_BAR_CHART_HEADER: 'Expenditure by category',
  VARIABLE_EXPENSES_OVERVIEW_LINE_CHART_HEADER: 'Total monthly expenditure',
  VARIABLE_EXPENSES_OVERVIEW_PRIOR_MONTH_BTN_TOOLTIP: 'Previous month',
  VARIABLE_EXPENSES_OVERVIEW_NEXT_MONTH_BTN_TOOLTIP: 'Next month',
  VARIABLE_EXPENSES_OVERVIEW_CATEGORY_GROCERIES: 'Groceries',
  VARIABLE_EXPENSES_OVERVIEW_CATEGORY_LEISURE: 'Leisure',
  VARIABLE_EXPENSES_OVERVIEW_CATEGORY_GIFT: 'Gift',
  VARIABLE_EXPENSES_OVERVIEW_CATEGORY_HEALTH: 'Health',
  VARIABLE_EXPENSES_OVERVIEW_INDULGENCE_BAR_CHART_TITLE: 'Intolerances & Addictive Substances',
  VARIABLE_EXPENSES_OVERVIEW_CONTAINS_INDULGENCE_LABEL_YES: 'Addictive substances',
  VARIABLE_EXPENSES_OVERVIEW_CONTAINS_INDULGENCE_LABEL_NO: 'Clean',
  VARIABLE_EXPENSES_OVERVIEW_IS_PLANNED_LABEL_YES: 'Planned',
  VARIABLE_EXPENSES_OVERVIEW_IS_PLANNED_LABEL_NO: 'Spontaneous',
  VARIABLE_EXPENSES_OVERVIEW_CONTAINS_INDULGENCE_TOOLTIP: 'Contains addictive substances?',
  VARIABLE_EXPENSES_OVERVIEW_IS_PLANNED_TOOLTIP: 'Purchase planned?',
  VARIABLE_EXPENSES_OVERVIEW_CATEGORY_SUPPLEMENTS: 'Supplements',
  VARIABLE_EXPENSES_OVERVIEW_CATEGORY_HYGIENE: 'Hygiene',
  VARIABLE_EXPENSES_OVERVIEW_CATEGORY_MEDICAL_EXPENSES: 'Medical Expenses',
  VARIABLE_EXPENSES_OVERVIEW_CATEGORY_COMBINED_HEALTH_AND_BODY: 'Health & Body',
  VARIABLE_EXPENSES_OVERVIEW_RENDER_ALL_EXPENSE_ROW_BTN: 'Raw Data',

  MINOR_INPUT_VARIABLE_EXPENSE_MODAL_OPEN: 'Add Expense',
  MINOR_INPUT_VARIABLE_EXPENSE_MODAL_INPUT_INDULGENCE: 'Indulgences',
  MINOR_INPUT_VARIABLE_EXPENSE_MODAL_INPUT_DATE_OF_PURCHASE: 'Date',
  MINOR_INPUT_VARIABLE_EXPENSE_MODAL_INPUT_PRICE: 'Price in â‚¬',
  MINOR_INPUT_VARIABLE_EXPENSE_MODAL_DESCRIPTION: 'List of expenses',
  MINOR_INPUT_VARIABLE_EXPENSE_MODAL_STORE: 'Store',
  MINOR_INPUT_VARIABLE_EXPENSE_MODAL_CATEGORY: 'Expense Category',
  MINOR_INPUT_VARIABLE_EXPENSE_MODAL_IS_PLANNED_LABEL: 'Was the expense planned?',
  MINOR_INPUT_VARIABLE_EXPENSE_MODAL_CONTAINS_INDULGENCE_LABEL: 'Does the expense contain indulgences?',
  MINOR_INPUT_VARIABLE_EXPENSE_MODAL_INDULGENCE_VALIDATION_ERROR_MSG: 'TODO unvertr.',
  MINOR_INPUT_VARIABLE_EXPENSE_MODAL_PRICE_VALIDATION_ERROR_MSG: 'TODO preis',
  MINOR_INPUT_VARIABLE_EXPENSE_MODAL_DESCRIPTION_VALIDATION_ERROR_MSG: 'TODO description',
  MINOR_INPUT_VARIABLE_EXPENSE_MODAL_STORE_AUTOCOMPLETE_VALIDATION_ERROR_MSG: 'TODO store',
  MINOR_INPUT_VARIABLE_EXPENSE_MODAL_CATEGORY_AUTOCOMPLETE_VALIDATION_ERROR_MSG: 'TODO category',
  MINOR_INPUT_VARIABLE_EXPENSE_MODAL_GENERIC_DATE_VALIDATION_ERROR_MSG:
    'Expect date (between 2022 and next year) in the format: DD.MM.YYYY',
  // eslint-disable-next-line quotes
  MINOR_INPUT_VARIABLE_EXPENSE_MODAL_PRESET_TOOLTIP_TODAY: "Today's date",
  MINOR_INPUT_VARIABLE_EXPENSE_MODAL_PRESET_TOOLTIP_COFFEE: 'Drink in CafÃ©',
  MINOR_INPUT_VARIABLE_EXPENSE_MODAL_PRESET_TOOLTIP_COLA: 'Coke Zero in Kiosk',
  MINOR_INPUT_VARIABLE_EXPENSE_MODAL_PRESET_TOOLTIP_CHOCO_CROISSANT: 'A choci croissant!',
  MINOR_INPUT_VARIABLE_EXPENSE_MODAL_PRESET_TOOLTIP_BREAKFAST: 'Organic eggs and frozen shrimp',
  CONFIRMATION_DIALOG_TITLE_DELETE: 'Confirm Deletion?',

  NOTIFICATIONS_INCOME_SALES_DATA_MALFORMED_POSITIVE_SALE_VALUE_FOUND:
    'Positive value found in sales. These should be negative as they are inverse to expenses.',
  NOTIFICATIONS_FOOD_ITEM_DELETED_SUCCESSFULLY: (pos1: string) => `Food Item with ID [${pos1}] has been deleted.`,
  NOTIFICATIONS_FOOD_ITEM_DELETED_ERROR: 'Food Item could not be deleted.',
  NOTIFICATIONS_INVESTMENT_OR_DIVIDEND_DELETED_SUCCESSFULLY: (pos1: string, pos2: string) =>
    `${pos1} with ID [${pos2}] has been deleted.`,
  NOTIFICATIONS_INVESTMENT_OR_DIVIDEND_DELETED_ERROR: (pos1: string) => `${pos1} could not be deleted.`,
  NOTIFICATIONS_FOOD_ITEM_PRICE_UPDATED_SUCCESSFULLY: 'The new price has been saved.',
  NOTIFICATIONS_FOOD_ITEM_PRICE_UPDATED_ERROR: 'Item price could not be saved.',
  NOTIFICATIONS_FOOD_ITEM_INSERTED_SUCCESSFULLY: (pos1: string) => `Food item with ID [${pos1}] has been added.`,
  NOTIFICATIONS_FOOD_ITEM_INSERTED_ERROR: 'Food item could not be added.',
  NOTIFICATIONS_LOGIN_FAILED: 'Login failed.',
  NOTIFICATIONS_ACCOUNT_CREATION_SUCCESS: (pos1: string) =>
    `User [${pos1}] has been created successfully. Please login.`,
  NOTIFICATIONS_ACCOUNT_CREATION_ERROR: 'Account creation failed.',
  NOTIFICATIONS_FOOD_ITEM_DISCOUNT_ADDED_SUCCESSFULLY: (pos1: string) =>
    `Discount for item with ID [${pos1}] has been added.`,
  NOTIFICATIONS_FOOD_ITEM_DISCOUNT_ADDED_ERROR: 'Discount could not be added.',
  NOTIFICATIONS_INVESTMENT_DIVIDEND_ADDED_DIVIDEND_SUCCESSFULLY: (pos1: string) =>
    `Dividend with ID [${pos1}] has been added.`,
  NOTIFICATIONS_INVESTMENT_DIVIDEND_ADDED_DIVIDEND_TAXES_SUCCESSFULLY: (pos1: string) =>
    `Tax data with ID [${pos1}] has been added.`,
  NOTIFICATIONS_INVESTMENT_DIVIDEND_ADDED_DIVIDEND_AGGREGATED_INVESTMENTS_SUCCESSFULLY:
    'Related investment data for the dividend has been added.',
  NOTIFICATIONS_INVESTMENT_DIVIDEND_ADDED_DIVIDEND_ERROR: 'Dividend could not be added.',
  NOTIFICATIONS_INVESTMENT_ADDED_INVESTMENT_SUCCESSFULLY: (pos1: string) =>
    `Investment  with ID [${pos1}] has been added.`,
  NOTIFICATIONS_INVESTMENT_ADDED_INVESTMENT_TAXES_SUCCESSFULLY: (pos1: string) =>
    `Tax data with ID [${pos1}] has been added.`,
  NOTIFICATIONS_INVESTMENT_ADDED_INVESTMENT_ERROR: 'Investment could not be added.',

  SELECTED_MODE_STR: 'Mode:',
  SELECTED_PALETTE_STR: 'Palette:',
  SELECTED_LANGUAGE_STR: 'Language:',
  OVER_TOTAL_PERIOD: 'Over the entire period',
  LOGGED_IN_AS: 'Username:',
  INTERVAL_MONTHLY: 'monthly',
  INTERVAL_QUARTERLY: 'quarterly',
  INTERVAL_HALFYEARLY: 'biannually',
  INTERVAL_YEARLY: 'annually',

  ARRAY_MONTH_ALL: [
    [resourceProperties.ALL, /\b(0[1-9]|1[0-2])\b/], // regular expression matching months between 01-12
    ['January', '01'],
    ['February', '02'],
    ['March', '03'],
    ['April', '04'],
    ['May', '05'],
    ['June', '06'],
    ['July', '07'],
    ['August', '08'],
    ['September', '09'],
    ['October', '10'],
    ['November', '11'],
    ['December', '12']
  ],

  ARRAY_MARKETPLACE: [
    'Tradegate',
    'Gettex',
    'Stuttgart',
    'NYSE',
    'Nasdaq',
    'Japan Exchange Group',
    'Shanghai Stock Exchange',
    'Shenzhen Stock Exchange',
    'Euronext',
    'Berlin',
    'Frankfurt',
    'Hamburg',
    'Munich',
    'Quotrix',
    'XETRA',
    'London',
    'Vienna'
  ]
};
